art art mulder subject get performance x faq archive-name last-modified maximize performance x monthly post compile art mulder art ram faster cpu disk space faster ethernet standard response hear ask improve performance workstation well hardware always option wonder hardware always even necessity faq list collection suggestion idea different people net best possible performance x window workstation without purchase hardware performance highly subjective issue individual user must balance speed versus feature order come personal decision therefore document expect contain many subjective opinion amongst objective fact document specifically concern x course many factor affect performance workstation however outside scope document people seriously interest whole area system performance might want look nutshell handbook system performance tune mike loukides way read look like well-written comprehensive treatment system performance unaware similar book ed table content introduction administrivia x faq window manager x server server lock server ram start server font resource file define display properly client better clock x better terminal emulator x tune client miscellaneous suggestion pretty picture quicker mouse program think say source information author note change since last issue new since last issue introduction administrivia document post month around usenet news group read copy faq month old see last-modified date probably locate latest edition since information may outdated know get newsgroups site doe receive article ha already expire retrieve faq archive site exist several usenet faq archive site find access please see introduction newsgroup post main faq archive document find access anonymous ftp retrieve send mail message mail-server command send message body x faq david b lewis faq craft maintain informative well write frequently ask question document focus general x information faq concentrate performance faq doe address issue speed regard x server gist topic seem use faster please see x faq complete detail window manager lot window manager lot different feature ability choice use necessity balance act performance useful feature point respondent agree upon twm best candidate speedy window manager couple generic trick try soup window manger turn unnecessary thing like zoom opaque move also lay window tile manner reduce amount cpu power spend raise lower overlap window joe english joe find good font tile aka misc-fixed-medium-r-normal biggest font know use sun screen still get two column terminal window side-by-side display overlap font suggestion accept x server server make sure server proper match hardware monochrome monitor use monochrome server monochrome sun notice much difference xsun colour server xsunmono however wa point xsunmono smaller therefore contribute le page thank jonny farringdon michael salmon server wa compile also make difference jeff law law advise u sun system x compile gcc version unbundled sun compiler expect get large speedup server use bundle sunos compiler assume similar result would occur use one high-quality commercial compiler market lock server ram ha anyone try hack x server lock ram doe get page eg via call plock doe help performance one inquiry topic pointer plock function call hard evidence someone try position give try thank eric c claeys ecc danny backx db juan martin juando start server joe english joe start lot client xsession whatever sleep second two launch one change xclients script log actually take le time heavily load system without much core though sound crazy confirm work warner losh imp provide good explanation work summarize start x server take huge amount time start accept connection lot initialization server start process touch large number page process run time would fight server use cpu importantly memory put sleep give server chance get sort client start similarly also lot initialization whenever x client program start toolkits register widget resource fetch program initialize state database forth activity typically memory intensive initialization process ha reach steady state memory usage typically settle use page use sleep stagger launch client xinitrc avoid fight workstation limit resource definitely mileage may vary situation many variable consider available ram local swap space load average number user system client start etc currently xinitrc situation like sleep exec xclock sleep exec xbiff sleep exec xterm sleep exec xterm experiment sleep exec xclock sleep exec xbiff sleep exec xterm sleep exec xterm even try sleep exec sleep exec xclock sleep exec xbiff sleep exec xterm sleep exec xterm idea last one wa make sure xinit completely finish process xinitrc settle steady state sleep expire client launch yield fairly comparable result stick current setup simplicity probably experiment bite find setup suit font load font take time ram minimize number font application use get speed increase load-up time one simple strategy choose small number font one small one large one roman whatever suit configure client least heavily use client use font client program start quicker font already load server also conserve server resource since fewer font load server farrell mckay fbm joe english joe eg main xterm font also twm set use menu icon etc twm default font since normally use eliminate one font server oliver jones oj keep font local workstation rather load nfs make extensive use scalable font use font server resource file keep xresources xdefaults file small save ram save server startup time joe english joe one suggestion xdefaults xresources file try put minimum number resource want available application example reversevideo true separate resource individual client-specific resource file example login file set environment variable xuserfilesearchpath setenv xuserfilesearchpath n frequently ask question faq contain excellent explanation environment variable work ed xterm launch load resource xdvi find forth note client follow xxxxx resource-file name pattern check system app-defaults directory often find proper name name personal resource file name document xt specification pg thank kevin samborn samborn michael urban urban mike long mikel kevin mail setup file inquirer method organize personal resource ha follow benefit easier maintain usable fewer resource store x server property side benefit server may start fractionally quicker since load resource application process resource never sort resource find one affect also ha drawback application interest ha load additional file every time start doe seem make much performance difference might consider huge boon usability modify application resource database need re-run application without xrdb xrdb default run xdefaults file cpp resource split multiple resource file load individual client program watch c style comment xdefaults file cpp strip switch method distribute resource file spend several frustrate day try figure client find resource xt provide error message encounter c style comment resource file simply silently abort process resource file loss preprocessing handy ifdef color enough cause people dismiss method resource management may also run client break rule example neither emacs xvt find resource anywhere xdefaults start client machine doe share file machine resource store client find resource load resource server guarantee client always find resource casey leedom casey possible compromise suggestion plan try put resource heavily use client eg xterm xdefaults file use separate resource file method client seldom use define display properly client program often execute machine server situation rather set display environment variable hostname hostname name workstation set display variable access optimize routine know server machine use share memory method transfer request thank patrick j horgan see display name section x man page explanation properly set display name think stock mit least data general hp library smart enough use local communication even display set specially rob sartin sartin jody goldberg jody send xlib patch change stock use local communication even display properly set want get business distribute try juggle non-mit patch elect include hopefully mit apply minor line patch meantime want try email jody ed client megabyte ram think carefully number program run think also kind program run example smaller clock program xclock unfortunately really notice program advertise large onus u research spread word suggestion better alternative standard client eg xclock xterm xbiff welcome ed receive contradictory advice people subject x client program advocate use program strictly xlib base since xt xaw toolkits rather large others warn u application use may already load one share library case use non-xt example client program may actually increase amount ram consume upshot seem mix toolkits try use athena client xview client motif client etc use one drag one toolkit library know environment think carefully client program would work best together environment thank rob sartin sartin duncan sinclair sinclair sinclair better clock x xcuckoo suggest duncan sinclair sinclair available xcuckoo display clock title bar another program save screen real estate mclock suggest der mouse mouse available non xt-based extensively configurable make look much like mit oclock mostly like xclock purely change resource course ultimate clock one consume resource take screen real estate one hang wall better terminal emulator x readme file distribute xterm abandon hope ye enter undoubtedly ugly program distribution ugly maybe site still use suspect xterm one use client many site laziness better terminal emulator available see must use xterm try reduce number savelines reduce memory usage oliver jones oj jonny farringdon xvt suggest richard hesketh available need esoteric feature xterm get hold xvt wa write save swap space xterm rather hog wa write partial xterm rename resource xvt pretend xterm current version bind key xterm hear version xvt feature find yet update march recently email conversation brian warkentin regard xvt question whether xvt really faster xterm instance xvt may initialize slightly faster compare scroll speed try quickie benchmark dd see program scroll faster also xterm may slightly larger ram requirement hard number doe anyone else share library share text segment mean xterm page requirement major experiment rip tek stuff xterm make little difference since never use never get bring memory stand conflict report validity xvt xterm summary caveat emptor mileage may vary provide hard data like see specifically much ram occupy much swap need relative speed mterm suggest der mouse mouse available also terminal emulator major lack scrollback people like anyway tune client suggestion tune client program work faster scott barman scott come suggestion regard motif text field widget notice data entry motif text field widget wa get slight lag response keystroke particularly initial one field examine wa go xscope find seem resource xmnblinkrate non-zero focus text field widget even text widget i-beam cursor blink every time cursor appear disappear widget widget code make request server copyarea user stop set resource xmnblinkrate noticeable sparc doe make little difference slower system specific suggestion probably apply general lot area consider heavily use client minor embellishment turn thereby save server request miscellaneous suggestion pretty picture use large bitmap gif etc root window background complicate root window bitmap slower server redrawing screen reposition window redraw etc take ram cpu power work sun sparc conscious performance issue ca comprehend see people sun run xphoon root window let someone else figure much ram would occupy full screen root image colour workstation anything like need screen real estate get client rarely see root window anyway thank qiang alex zhao azhao remind one ed quicker mouse use xset adjust fast pointer move screen move mouse use xset xinitrc file let send pointer across screen flick wrist see xset man page idea information hint sometimes may want slow mouse track fine work cover option place number different mouse set command menu window manager twm menu mouse set mouse set fast xset normal fast xset system default un-accelerated xset default glacial xset program think joe english joe speed application develop ton thing stick motif program set xmfontlist resource individual button label list et al use defaultfontlist labelfontlist whatever resource highest-level manager widget stick font possible better yet use motif absolute pig create destroy widget fly try reuse avoid many problem buggy toolkits use line width gc server make huge difference compress collapse multiple expose event make difference fast application completely unusable one francois staes frans small remark hear use better malloc function would greatly increase performance xt base application since use malloc heavily suggest try gnuy malloc find time yet test small program malloc free difference indeed noticeable somewhat time faster confirmation anyone ed andre beck unnecessary noexpose event people use fastest blit routine forget reset gc use blits cause noexpose event every blit case put load onto connection force client run event-loop thousand xchangegc request gfx context switch also see handcoded x-apps one gc create heavily change xt us definitely better mechanism cache share lot gc need parameter remove load subsequent xchangegc request connection move toward client startup phase say contributor propose idea seem right wall first david b lewis day dbl night david craft swap display someone else run program machine display locally user run machine onto display goal reduce context switch operation client server situation easily try receive follow confirmation michael salmon regularly run program machine notice big difference try run machine reduce net usage usually nice reduce impact intrusion help lot poor little mb wa essential mb casey leedom casey server client compete cpu server run machine really major problem except client server absolute synchronicity context thrash timothy h panton thp firstly rely fact cpu mostly idle x cpu usage bursty chance teammate something cpu-intensive time small get twice available action second factor context switch expensive use cpu half pay price due overhead go network offset case improve buffer network typically v pipe allow even fewer context switch source information volume x window system series x window system administrator guide book x administrator read adrian nye adrian lot tip performance paper improve x application performance chris peterson sharon chang issue x resource earlier version paper appear xhibition conference proceed paper absolutely essential read x programmer author note list currently maintain art mulder art suggestion correction submission inclusion list gladly accept layout suggestion comment spell mistak also welcome currently list contributor various comment suggestion want credit please tell speedup-x-faq copyright c arthur e mulder may copy document whole part long try make money pretend write art mulder art conform world department compute science transform renewal university alberta edmonton canada mind roman 