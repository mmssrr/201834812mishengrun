ware peter ware subject frequently ask question faq archive-name xt-faq version id faq-xt v ware exp x toolkit intrinsics monthly post article contain answer frequently ask question faq x toolkit intrinsics submit question preferably answer send email ware many faq include one available archive site directory name faq archive appear archive-name line top article faq archive xt-faq code fragment public domain content xt glossary software version relate faq doe application core dump use use different visual default visual application use shell widget visual visual depth colormap shell inherit still get badmatch error doe widget get destroy call xtdestroywidget exit still execute destroycallbacks resize shell widget ca xtappaddinput handle file good book magazine xt widget available alternative intrinsics pas float value xtsetvalues write resource converter open multiple display change resource load order callback execute know widget visible reparent widget xt xtreparentwidget use xtmalloc xtfree etc debug xt application xtaddinput xtaddtimeout xtaddworkproc work implement drag drop xt glossary xt intrinsics implement object orient interface c code allow useful graphical component create include class provide base functionality object rectobj core composite constraint shell overrideshell wmshell etc term xt intrinsics use interchangeably however use precisely mean specific library x window system particular doe include athena motif olit widget set without widget intrinsics especially useful widget refer user interface abstraction create via xt precise use object subclass core class use loosely refer anything subclass object class although accurately call windowless widget gadget xlib c interface protocol one layer xt intrinsics typically widget us relatively xlib function xt provide service although understand xlib help problem software version follow latest version xt base software software version release next expect patch none patch athena widget see motif olit xtra xw none xcu none fwf relate faq david b lewis uunet craft faq maintain faq x post monthly locate export liam r e quin lee post faq list open look jan newmarch jan post faq list motif peter ware ware post faq list export doe application core dump use brief xlib xt widget set mutual exclusion critical section interrupt handler likely leave one library inconsistent state appropriate flag yet set dangle pointer middle list traversal etc note ansi c standard point behavior signal handler undefined signal handler call function signal problem specific xlib xt posix specification mention function may call safely may assume function call xlib xt function safe way deal signal set flag interrupt handler flag later need check either work procedure timeout callback incorrect add either interrupt handler another note dangerous add work procedure never finish effectively preempt work procedure previously add never call another option open pipe tell event loop read end use xtappaddinput signal handler write byte write end pipe signal however could deadlock process pipe fill intrinsics deal problem primarily suppose portable layer hardware operate system good enough reason think note article x journal example volume error use different visual default require complicate answer window ha three thing visual specific visual colormap border pixmap widget colormap borderpixmap resource shell widget visual resource another question deal shell visual default value resource copyfromparent doe exactly say shell widget copyfromparent get evalulated defaultvisualofscreen defaultcolormapofscreen one three resource properly set badmatch error occur window create properly set value depend visual use get work two part answer first want application start particular visual second want particular shell within application start different visual second actually easier basic information need available first little harder need initialize much toolkit order determine need information sample code start application use something default visual compile cc g visual lxaw lxmu lxt lxext lm run visual geometry depth visual staticcolor fg blue bg yellow need move mouse get particular visuals colormap install include include include typedef struct visual visual int depth optionsrec optionsrec option xtresource resource visual visual xtrvisual sizeof visual xtoffsetof optionsrec visual xtrimmediate null depth depth xtrint sizeof int xtoffsetof optionsrec depth xtrimmediate null xrmoptiondescrec desc visual visual xrmoptionseparg null depth depth xrmoptionseparg null int main argc argv int argc char argv xtappcontext app application context widget top toplevel widget display dpy display char xargv save argument vector int xargc save argument count colormap colormap create colormap xvisualinfo vinfo template find visual xvisualinfo return list visuals int count number match arg args cardinal cnt char name test char class test save command line argument xargc argc xargv char xtmalloc argc sizeof char bcopy char argv char xargv argc sizeof char follow create dummy toplevel widget retrieve appropriate visual resource cnt top xtappinitialize app class desc xtnumber desc argc argv string null args cnt dpy xtdisplay top cnt xtgetapplicationresources top option resource xtnumber resource args cnt cnt defaultvisualofscreen xtscreen top xtsetarg args cnt xtnvisual cnt create appropriate colormap could use default colormap base class visual could examine property rootwindow find right colormap could sort thing colormap xcreatecolormap dpy rootwindowofscreen xtscreen top allocnone xtsetarg args cnt xtncolormap colormap cnt find information visual xvisualidfromvisual xgetvisualinfo dpy visualidmask vinfo count count xtsetarg args cnt xtndepth depth cnt xfree xpointer xtdestroywidget top create real toplevel widget xtsetarg args cnt xtnargv xargv cnt xtsetarg args cnt xtnargc xargc cnt top xtappcreateshell char null class applicationshellwidgetclass dpy args cnt display application loop handle event xtrealizewidget top xtappmainloop app return visual application use point argue one opinion way application know appropriate visual ha specify user disagree application probably fall category always use default visual hardware specific expect particular visual truecolor overlayplane extension application run isolation depend way server allocate resource may always want application run truecolor mode go mess application may upset choose run greyscale instead psuedocolor monochrome example low end color sun server many different possible visuals monochrome entry colormap static gray static color truecolor sgi iris offer plus bite truecolor bite truecolor overlay plane shell widget visual strictly convention make possible arbitrary widget know visual us find look shell widget ancestor obtain visual shell widget visual resource doe must realize method use visual call xcreatewindow also make resource obtain xtgetvalues widget find reasonable value probably xtnvisual visual depth colormap shell inherit default value resource set copyfromparent interpret defaultcolormapofscreen defaultdepthofscreen default visual screen widget ha parent applicationshellwidgetclass root widget tree parent widget null shell copy colormap depth parent us copyfromparent visual still get badmatch error resource converter improperly cache reference wa especially true earlier version motif doe widget get destroy call xtdestroywidget see section xt specification eventually doe get destroy immediately intrinsics destroy widget two-phase process first child flag set indicate destroy put list widget destroy way pending x event reference widget clean memory actually free second phase perform callback event handler action complete check next x event point list traverse widget memory actually free among thing widget may destroy intrinsics determine reference widget list phase destruction occur immediately also nest event loop use widget place destroy list enter inner event loop destroy return outer event loop exit still execute destroycallbacks problem simple entirely reasonable approach exit application use call exit directly widget may chance clean external state open socket temporary file allocate x resource etc code simplicity reason assume single toplevel widget widget toplevelget gw widget gw widget find toplevel widget top top gw xtparent top top xtparent top empty return top void exitcallback gw closure widget gw widget xtpointer closure data app specify xtpointer widget specific data widget toplevel toplevel toplevelget gw xtunmapwidget toplevel make disappear quickly xtdestroywidget toplevel exit one see code exit immediately destroy toplevel widget trouble phase destruction may never occur work widget application work widget external state might think since work always work remember part reason object orient approach use one ignorant implementation detail widget mean widget may change someday require external state clean destroy callback one alternative modify exitcallback set global flag test flag private event loop however private event loop frown upon tend encourage sloppy difficult maintain practice try follow code instead include extern widget toplevelget needfunctionprototypes widget gw endif extern boolean exitworkproc needfunctionprototypes xtpointer closure endif extern void exitcallback needfunctionprototypes widget gw xtpointer closure xtpointer endif widget toplevelget gw widget gw widget find toplevel widget top top gw xtparent top top xtparent top empty return top void exitcallback gw closure widget gw widget xtpointer closure data app specify xtpointer widget specific data widget toplevel toplevel toplevelget gw xtunmapwidget toplevel make disappear quickly xtdestroywidget toplevel xtappaddworkproc xtwidgettoapplicationcontext gw exitworkproc xtpointer null boolean exitworkproc closure xtpointer closure exit notreached exitcallback add work procedure get call application next idle happen event process destroy callback execute resize shell widget realize one doe resize shell widget proper thing resize currently manage child shell widget use xtsetvalues geometry change propagate shell ask window manager may may allow request however shell must resource xtnallowshellresize set true otherwise even ask window manager grant request shell resize change position shell use xtsetvalues shell child within limit window manager grant ca xtappaddinput handle file doe however unix semantics ready file doe fit people intuitive model unix term file descriptor ready read whenever read call would block ignore set optional flag indicate block work expect terminal socket pipe file read always return return indicate eof data result code intrinsics always call input handler always think something read culprit select system call sysv base poll system call get around unix system best approach use another process check available input file use pipe connect application process pas file descriptor pipe xtappaddinput suitable program bsd system tail f filename rumor select system completely reliable particular ibm aix one would work several thousand time stop event wake seem result race condition kernel ibm claim fix pyramid doe work ultrix possibly others pipe implement socket wa completely break although write side write byte block read side receive break wa put pipe byte time waste lot time read small block get raound detect situation select ignore pipe mseconds give whole block note description use unix terminology read file descriptor pipe etc dependent area may identical system however intrinsic designer felt wa common enough operation include part toolkit also deal signal point know good book magazine xt favorite definitive reference perspective offer reasonable introduction also go full detail intrinsics start use wa already familiar xt concept behind newcomer may may find useful always find accurate complete mean page asente paul j swick ralph r x window system toolkit complete programmer guide specification digital press isbn order number prentice-hall isbn also available dec direct book commonly recomend novice young doug x window system application program xt motif version prentice hall isbn isbn course ha entire series manual x xt order particular volume xt reference manual page style edition extensively overhaul go far beyond mit manual page find useful particular permutted index reference manual page help great deal chase relate information read two periodical x resource x journal two deal specifically x x resource publish quarterly one issue mit x consortium technical conference proceed advertise find informative pretty good depth order call email cathyr editorial matter email adrian table content post tex form ascii form x journal bimonthly trade rag lot advertise article informative orient toward le technical audience read see go expectation learn great deal remember represent fairly small percentage people also pretty good collection people advisory board columnist call widget available three popular widget set athena set provide sufficient purpose ugly side recently look available ftp motif osf available license fee commonly ship many workstation vendor platform almost everyone sun look good work well personally think poorly implement olit open look intrinsics toolkit set widget implement sun open look specification develop never use ca comment quality hear rumour pain actually get addition follow collection widget also available xtra library widget sale graphical software technology include bar graph stack bar graph line graph pie chart xy plot hypertext help spreadsheet data entry form widget never see ca comment fwf free widget foundation attempt collect set freely available widget include pixmap editor filedialog others current set widget obtain via anonymous ftp machine file xcu cornell university widget gene dyke one early widget set release provide nice appearance button ha mini command language probably widely use x sony widget set wa around day seem disappear look like promise xw hp widget precursor motif originally write exist diffs get work pretty good widget set ha le die precursor wa xray toolkit wa originally implement apparently provide much experience designer xt xo widget set work still primitive give try follow specialize widget also available tbl implement tabular layout widget support motif widget child part wcl plot athena plot widget athena widget contact gnb joe alternative intrinsics name language vendor xview c sun oi c parcplace interview c stanford c however much like c admire skill design implement intrinsics hopefully alternative develop next year us object orient language keep eye open expect change time language c start gain acceptance pas float value xtsetvalues first go wrong structure arg essentially typdef struct string name long value arg code arg arg xtsetarg arg name expand arg arg name see normal c type conversion get integer instead float point value value copy widget resource bite pattern wildly different require float point value get around follow macro athena widget document recomending previous suggestion define xtsetfloatarg arg n sizeof float sizeof xtargval xtsetarg arg n else xtargval ld xtargval xtsetarg arg n ld write resource converter courtesy rich thomson rthomson follow discussion resource converter assume intrinsics resource converter change allow destructors cache convert value several main type resource converter string data type data type string data type data type string data type usually string data type converter ha fix set string convert data type value often use map enumerate name enumerate value name value true false case string data type converter need compare resource value list fix string readily accomplish use quark mechanism resource manager resource value turn quark unique representation string fit single word resource quark compare quark fix string represent enumerate value many enumerate string converter many converter small number enumeration string global initialization routine might use turn resource string quark way first time one converter use string turn quark hold static variable use next invocation one converter ii data type string type converter slightly easier string data type converter since use quark necessary instead data type value simply convert string value probably use sprintf data type string converter useful application wish convert internal data type value string write valid resource specification file mechanism use provide snapshot application state file snapshot use restore program know state via usual x resource database mechanism take trouble write string data type converter much extra effort write data type string converter write time help ensure consistent iii data type data type type converter use convert exist data type value another data type instance x pixel value convert rgb data type contain separate field red green blue type signature resource converter follow typedef boolean xttypeconverter display xrmvalueptr cardinal xrmvalueptr xrmvalueptr xtpointer display dpy xrmvalueptr args cardinal xrmvalueptr fromval xrmvalueptr toval xtpointer converter invoke fromval argument point source x resource manager value toval argument point destination x resource manager value argument opaque pointer converter-specific data specify converter register args argument allow extra information pass converter invoke instance pixel rgb structure converter discuss would need colormap visual argument lookup pixel obtain rgb value correspond pixel care must take toval argument xrmvalue ha follow type definition specify size location convert value typedef struct unsigned int size addr xrmvalue xrmvalueptr converter invoke address may point location give size convert value location null former case converter ensure size destination area large enough handle convert value destination area large enough converter set size amount space need return false caller ensure enough space allocate reinvoke converter size large enough converter simply copy convert value space give return true location null converter assign location address static variable contain convert value return true write group converter code often repeat become convenient define macro define var type toval addr toval size sizeof type toval size sizeof type return false else type toval addr var else toval addr var toval size sizeof type return true define donestr str toval addr toval size sizeof string toval size sizeof string return false else toval addr str toval size sizeof string return true inside converter good idea perform little safety check args argument ensure converter call properly write converter need register intrinsics intrinsics invoke resource converter create widget fetch resource value resource database register converter single application context use xtappsettypeconverter void xtappsettypeconverter context converter args cache destructor xtappcontext context string string xttypeconverter converter xtconvertarglist args cardinal xtcachetype cache xtdestructor destructor register converter application context use xtsettypeconverter void xtsettypeconverter converter args cache destructor string string xttypeconverter converter xtconvertarglist args cardinal xtcachetype cache xtdestructor destructor intrinsics routine xtappaddconverter xtaddconverter supersede xtappsettypeconverter xtsettypeconverter whenever possible newer routine use converter register intrinsics cache argument specify convert resource value cache xtcachenone cache convert value xtcacheall cache convert value xtcachebydisplay cache convert value per display basis cache convert value require round-trip server good idea instance string pixel conversion destructor argument routine invoke resource destroy either cache reference count ha decremented zero widget value destroy xtdestructor ha follow type definition typedef void xtdestructor xtappcontext xrmvalueptr xtpointer xrmvalueptr cardinal xtappcontext context xrmvalueptr xtpointer xrmvalueptr args cardinal destructor invoke free auxiliary storage associate argument doe actually free storage point argument addr destructor pass extra argument pass converter conversion wa perform instance colormap visual argument string pixel converter since destructor would need free allocate pixel colormap well private data pass converter wa register sample converter code find follow file mit distribution open multiple display see multi-user application software use xt x resource issue summer oliver jones complete coverage issue involve answer base article nutshell one us xtopendisplay add display single application context xtclosedisplay shutdown display remove application context real problem occur try close display happen way user select quit button one display user ha window manager send message server disconnect possibly killclient message server network failure assume deal gracefully since merely problem translate widget display remove display read oliver jones article third one difficult handle follow base oliver jones article include difficult problem difficulty arise xlib design presume error always unrecoverable fatal essentially true single display x base application true multiple display program application doe thing display information x server x error occur error handler call return exit happen way around use avoid return error handler follow code fragment demonstrate include xiorecover void xiohandler dpy display dpy destroydisplay dpy longjmp xiorecover main setjmp xiorecover xsetioerrorhandler xiohandler xtappmainloop destroydisplay something give display pointer go back application specific data perform necessary cleanup also call xtclosedisplay unfamiliar setjmp first call return save enough information latter execution longjmp return program state setjmp wa execute return value second setjmp value second argument longjmp several caveat use purpose adequate problem might run resource converter improperly cache resource likely symptom xlib error badcolor badatom badfont may problem total number display open since typically limit number file descriptor available typical value may also run authorization problem try connect display wa much discussion topic november robert scheifler post article basically say way xlib change change address change intrinsics first general change release describe certainly incomplete list new function add others deprecate list brevity primary goal much follow information retrieve chapter mit xt intrinsics manual volume edition addition gadget windowless widget new resource type converter interface handle cache additional data variable argument list interface define xtspecificationrelease add release wmshellpart toplevelshellpart transientshellpart change incompatibly add arglist count parameter event handler parameter add specification change change enumerate data type boolean change enumerate data type boolean add extension record obsolete info pass add extension record obsolete info pass call xtquerygeometry must store complete geometry add unrealizecallback xttranslatecoords actually work psuedo resource basetranslation add search app-default file make flexible customization resource add per-screen resource database support permanently allocate string permanetly allocate string require several class field args argument xtappinitialize xtvaappinitialize xtopendisplay xtdisplayinitialize xtinitialize change cardinal int many performance improvement summarize article xt performance improvement release gabe beged-dov x resource issue xrmstringtoquark augment xrmpermstringtoquark avoid string copy several field class record indicate need permanent string use array string resource callback list redesign use le memory translation manager redesign rewrite take le memory translation table merge faster cache action bind keycode keysyms cache better share gc modifiable field window widget translation us le space faster doe malloc space widget name since quark available widget space allocate include constraint several example program reduction memory usage function new xtallocategc sharable gc modifiable field xtgetactionlist get action table class xtscreendatabase return resource database screen xtsetlanguageproc register language procedure call set locale function new xtappaddactionhook procedure call every action xtappinitialize lot initialization work xtappreleasecacherefs decrement cache reference count converter xtappsetfallbackresources specify default resource xtappsettypeconverter register new style converter xtcallcallbacklist directly execute callback list xtcallconverter invoke new style converter xtcallbackreleasecacheref release cache resource value xtcallbackreleasecachereflist release list cache resource value xtconvertandstore find call resource converter xtdirectconvert invoke old-style converter xtdisplayofobject return display xtdisplaystringconversionwarning issue warn conversion xtfindfile find file xtgetactionkeysym retrieve keysym modify action xtgetapplicationnameandclass return name class xtgetconstraintresourcelist get constraint widget xtgetkeysymtable return keycode-to-keysym map table xtgetmulticlicktime read multi-click time xtgetselectionrequest retrieve selectionrequest event xtgetselectionvalueincremental obtain selection value incrementally xtgetselectionvaluesincremental obtain selection value incrementally xtinitializewidgetclass initialize widget class manually xtinserteventhanlder register event handler others xtinsertraweventhandler register event handler without modify input mask xtisobject test subclass object xtisrectobj test subclass rectobj xtkeysymtokeycodelist return list keycodes xtlasttimestampprocessed retrieve recent event time xtmenupopdown action pop widget xtmenupopup action pop widget xtoffsetof macro structure offset xtownselectionincremental make selection data availabe incrementally xtpoupspringloaded map spring-loaded popup xtregistergrabaction indicate action procedure need passive grab xtremoveactiohhook remove function call every action xtresolvepathname find file xtscreenofobject return screen object xtsetmulticlicktime set multi-click time xtsetwmcolormapwindows set custom colormaps xtungrabbutton cancel passive button grab xtungrabkey cancel passive key grab xtungrabkeybard release active keyboard grab xtungrabpointer release active pointer grab xtva varags interface bunch function xtwindowofobject return window nearest widget ancestor deprecate replacement xtaddactions xtappaddactions xtaddconverter xtappaddconverter xtaddinput xtappaddinput xtaddtimeout xtappaddtimeout xtaddworkproc xtappaddworkproc xtconvert xtconvertandstore xtcreateapplicationshell xtappcreateshell xtdestroygc xtreleasegc xterror xtapperror xtgeterrordatabase xtappgeterrordatabase xtgeterrordatabasetext xtappgeterrordatabasetext xtgetselectiontimeout xtappgetselectiontimeout xtinitialize xtappinitialize xtmainloop xtappmainloop menupopdown action xtmenupopdown action menupopup action xtmenupopup action xtnextevent xtappnextevent xtpeekevent xtapppeekevent xtpending xtapppending xtseterrorhandler xtappseterrorhandler xtseterrormsghandler xtappseterrormsghandler xtsetselectiontimeout xtappsetselectiontimeout xtsetwarninghandler xtappsetwarninghandler xtsetwarningmsghandler xtappsetwarningmsghandler xtwarning xtappwarning xtwarningmsg xtappwarningmsg resource load resource widget fill follow place highest priority lowest priority args pass creation time command line argument user per host default file user default file user per application default file system wide per application default file note read application startup result step single resource database use query per host default file contain customizations application execute specific computer file either specify xenvironment environment variable set file host use user default file either obtain property root window display set file use typically program xrdb use set property please note keep relatively small client connect display must transfer property size around reasonable toolkits may track change user may many per application default file contain customizations specific application intrinsics quite flexible file find read next part describe various environment variable effect file find system wide per application default file typically find file find fallback resource use intrinsics quite flexible file find read next part describe various environment variable effect file find thank oliver jones oj follow use several environment variable control resource load xt-based program xfilesearchpath xuserfilesearchpath xapplresdir environment variable control xt look application-defaults file application initialize xt load one app-defaults file path define xfilesearchpath another path define xuserfilesearchpath set xfilesearchpath software instal system way app-defaults file appear several different directory hierarchy suppose example run sun open window also x application instal could set value like xfilesearchpath would cause xt look app-defaults file wherever openwinhome locate setenv xfilesearchpath n n value environment variable colon-separated list pathnames pathnames contain replacement character follow see xtresolvepathname n value filename parameter application class name value file type case literal string app-defaults c customization resource suffix none app-defaults l language locale codeset l language part l ja territory part display language string c codeset part display language string let take apart example suppose application class name myterm also suppose open window instal notice example omit locale-specific lookup n mean n mean application initialize xt try open app-defaults file order show soon find one read us stop look others effect path search first let consider another example time let set xuserfilesearchpath look file current work directory myterm directory app-defaults setenv xuserfilesearchpath n first path list expand second expand convenient set debug follow imake convention name app-defaults file application source directory run application directory work still resource load properly note look app-default file xuserfilesearchpath bizarre reason neither type file suffix define useless another twist may specify customization resource value example might run myterm application like myterm xrm customization color one pathname specification value n c expand pathname would c substitution character take value customization resource default xfilesearchpath compile xt l n c l n c n c l n l n n note site replace projectroot batch default set default xuserfilesearchpath also compile xt root l n c root l n c root n c root l n root l n root n root either value xapplresdir user home directory xapplresdir set set xuserfilesearchpath value default xt ignore xapplresdir altogether notice quick dirty way make application find app-defaults file current work directory set xapplresdir single dot machinery work differently compatibilty many people set xapplresdir value dot follow slash order callback execute courtesy donna converse converse intrinsics library guarantee order widget writer application writer ability modify entire content callback list neither one currently know intrinsics guarantee order execution application programmer rely widget writer widget writer require document widget add remove callback list effect therefore functionality contain callback independent functionality contain callback list even though xt standard definition xtaddcallback say specify callback list procedure append may infer word append callback routine call order add callback list know widget visible courtesy donna converse converse build widget need know visible set visible interest field core window completely obscure core visible flag go false however window iconified flag stay set true right everything implement correctly demonstrate deficiency x protocol core widget reflect capability protocol deficiency information available one way case inconvenient way xt specification accurate second third paragraph section read section carefully visible field change response iconification visibilitynotify event receive window go viewable unviewable widget ancestor unmapped iconification occur protocol deficiency visibility state viewable state specific mean x protocol see glossary xlib x protocol reference manual problem mwm something else need see window manager window manager problem mwm fastest way determine window iconified application writer keep track global boolean action routine translation mapnotify unmapnotify shell widget contain custom widget custom widget writer see field return call xgetwindowattributes suggestion reparent widget xt xtreparentwidget ca use xtmalloc xtfree etc unfortunately code call malloc realloc calloc tend ignore possibility return null best handle something like ptr type malloc sizeof type ptr perror malloc xyzzy exit handle common case intrinsics define function xtmalloc xtcalloc xtnew xtnewstring xtrealloc use standard c language function malloc calloc realloc execute xterrormsg null value return xt error handler suppose return effectively exit addition xtrealloc call null pointer us xtmalloc get initial space allow code like ptr ptr type malloc sizeof type else ptr type realloc ptr sizeof type count count write ptr xtrealloc ptr sizeof ptr count also xtfree accept null pointer argument generally find xt function conveniant use however anytime allocate anything potentially large use standard function fully recover enough memory error xtnew xtnewstring conveniant macro allocate structure copy string struct abc xyzzy char ptr char str abcdef xyzzy xtnew struct abc take care type cast ptr xtnewstring str strict interpretation intrinsics reference manual allow implementation provide function exchangable malloc free code char ptr ptr xtmalloc free ptr may work personally call implementation break complain vendor common error motif programmer use xtfree string really use xmstringfree debug xt application first recomend get purify pure software great package trace memory problem sun bite pricey still recomend excuse market blurb contact support info purify insert additional check instruction directly object code produce exist compiler instruction check every memory read write perform program test detect several type access error read unitialized memory write past malloc bind write free memory purify insert check logic code program include third party vendor object-code library verify system call interface addition purify track memory usage identify individual memory leak use novel adaption garbage collection technique purify nearly comprehensive memory access check slow target program typically factor two five alternative package pricey sun run many unix ha pretty similar feature sentinel debug environment replace malloc several c library function add additional check contact cpcahil info next get sort xlib error need run synchronous mode easily accomplish sync command line argument set variable xdebug debugger set break point exit let trace back original xlib function call run synchronous mode actual error may occur number call xlib previously since xlib call buffer reply server asynchronous next trouble window layout use undocumented resource xtidentifywindows class resource xtdebug cause widget name identify window example example xload xrm true example xwininfo tree click new xload window give normal information widget name class window include help check location size errant widget next trouble geometry manager want test way widget manage child try act filter child geometry manager check behaviour clever idea unfortunate problem debug callback application execute grab keyboard mouse pulldown menu server effectively lock need go another machine kill debugger manually server lock application debug ha say one else access keyboard application stop wait debugger wait command unfortunately ca give input go application stop best way debug kind problem two machine desk run program debugger environment one machine run application possibly use command sequence like othermachine xhost thismachine thismachine setenv display thismachine gdb application favorite debugger othermachine xhost thismachine thismachine gdb application gdb set environment display gdb run believe codecenter c debugger ha method deal explicitely call xlib function release grab breakpoints debug widget problem require pretty good debug skill knowledge widget work go long way without know internals particular widget far without understand widget work judicious use conditional breakpoints add print statement debugger help great deal xtaddinput xtaddtimeout xtaddworkproc work get delicate problem three routine xtaddinput xtaddtimeout xtaddworkproc problem use application seem registred properly make handy little testprogram everything work perfect real application nothing happen introduction xtapp function obsoleted routine see change happen use default application context different one may create since event timeouts distribute per application context basis use two application context wo get event example cnt toplevel xtappinitialize app class desc xtnumber desc argc argv fallback args cnt xtaddtimeout xtaddworkproc xtappmainloop app would never invoke timeout implement drag drop courtesy roger reynolds rogerr feb drag-n-drop buzzword move data client intuitive fashion motif version support drag-n-drop capability openlook ha support d-n-d along two protocol compatable far know publish write package call rdd design flexible public protocol drag drop operation client intention wa provide tool would make easy people support standard drag-n-drop protocol program develop contribute sell regardless widget set use long base xt implementation base upon understand icccm convention detail read code hear dozen people use rdd like feel work whole lot better motif stuff also seem many think neat constrain use motif anyway latest rdd stuff available ftp possibly older version also available contrib pete ware ware ci dept ohio state university w bolz hall neil ave h columbus oh 