greg onufer subject let build software cryptophones internet graham toal gtoal write article hal hal finney write try code yesterday sparcstation elc take second compress second worth speech mean need optimize factor usable even half-duplex mode ouch thank try follow program quick hack create month ago determine whether sun sparcstation ipc could perform real-time full-duplex encrypt audio result data rate sustainable today modem test program read linearly-encoded audio audio device compress gsm compress frame sample record bite result hz frame rate encrypt de revers process send reconstruct audio back audio device compress encrypt audio stream sparcstation ipc exactly fast machine day certainly slower elc would barely sustain activity audio underruns would occcur speech wa intelligible run real-time process get best result remember though program quick hack performance certainly improve audio compression routine ftp believe look gsm toast use eric young de implementation longer know get cheer greg cut test program see much cpu take secure digital audio write g onufer greg write sun ipc run solaris sun isdn s-bus card speakerbox include include include include include include include include include int fd info null ioctl fd perror return info ioctl fd info perror return ioctl fd flushrw perror return info ioctl fd info perror return return int ifd gsm handle buf sample read ifd sample sizeof sample sizeof sample fprintf stderr short return handle sample buf return int ofd gsm handle buf sample handle buf sample fprintf stderr return write ofd sample sizeof sample sizeof sample fprintf stderr short return return main gsm handle frame int audiofd int option key audiofd open audiofd perror open exit initialize gsm compression code handle null fprintf stderr svs exit option handle option fprintf stderr svs fast exit initialize de code key key fprintf stderr svs exit key fprintf stderr svs exit memset sizeof memset sizeof open audio device configure audiofd null exit get sample linear convert byte frame audiofd handle frame exit block frame long long memmove frame memcmp fprintf stderr svs memcmp exit endif take byte frame convert sample play audiofd handle frame exit handle cut 